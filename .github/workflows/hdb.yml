name: HdB

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
        
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      - name: List directory structure
        run: ls -R
      - name: Run tests
        run: pytest $(find . -name dummy.py)
        
  bandit:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install Bandit
        run: pip install bandit[sarif]

      - name: Run Bandit and output SARIF
        run: |
          bandit -r . --format sarif --output results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
          
  dependency_check:
    needs: test
    runs-on: ubuntu-latest
    name: Dependency-Check
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        id: Dependency-Check
        with:
          project: "Task-Manager-using-Flask"
          path: "."
          format: "HTML"
          out: "reports"
          args: >
            --scan "**/*.py"
            --scan "requirements.txt"
            --failOnCVSS 7
            --enableRetired
      - name: Upload Dependency-Check results
        uses: actions/upload-artifact@v3
        with:
          name: Dependency-Check report
          path: ${{github.workspace}}/reports
  dast:
    needs: dependency_check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Build the Docker image for Flask App (again, if necessary)
      - name: Build Flask App Docker Image
        run: docker build -t flask-app .

      # Run Flask App in detached mode on port 5000
      - name: Run Flask App
        run: |
          docker run -d -p 5000:5000 --name flask-app flask-app

      # Wait for the Flask app to be ready
      - name: Wait for Flask App to be ready
        run: sleep 10  # Ajuste o tempo conforme necessário para a aplicação estar pronta

      # Run OWASP ZAP for security scan
      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-baseline.py -t http://localhost:5000 -r zap_report.html

      # Upload the ZAP report as an artifact
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v2
        with:
          name: ZAP Report
          path: zap_report.html
